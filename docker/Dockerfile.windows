#     ___ _____ _   ___ _  _____ ___  ___  ___ ___
#    / __|_   _/_\ / __| |/ / __/ _ \| _ \/ __| __|
#    \__ \ | |/ _ \ (__| ' <| _| (_) |   / (__| _|
#    |___/ |_/_/ \_\___|_|\_\_| \___/|_|_\\___|___|
#    embedded.connectivity.solutions===============
#
# copyright  STACKFORCE GmbH, Heitersheim, Germany, http://www.stackforce.de
# author     Adrian Antonana
# brief      STACKFORCE's serial CLI Dockerfile for Windows installer generation

FROM ubuntu:xenial

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    cmake \
    lsb-release \
    automake \
    autoconf \
    libtool \
    binutils-mingw-w64-x86-64 \
    g++-mingw-w64 \
    g++-mingw-w64-x86-64 \
    gcc-mingw-w64 \
    gcc-mingw-w64-base \
    gcc-mingw-w64-x86-64 \
    mingw-w64 \
    mingw-w64-common \
    mingw-w64-tools \
    mingw-w64-x86-64-dev \
    nsis

# replace stock cmake with cmake v3.9.4
WORKDIR /work
RUN git clone -b v3.9.4 https://github.com/Kitware/CMake.git
WORKDIR CMake/build
RUN cmake -DCPACK_GENERATOR="DEB" -DCMAKE_BUILD_TYPE=Release .. && make package
RUN apt-get remove --purge -y cmake cmake-data
RUN dpkg -i cmake-3.9.4-Linux-x86_64.deb

# get stackforces cmake modules to pass mingw toolchain file to docopt
WORKDIR /work
RUN git clone -b 2.0.1 https://github.com/stackforce/cmake-modules.git

# build docopt
WORKDIR /work
RUN git clone -b export-cmake-build-tree https://github.com/mrpelotazo/docopt.cpp.git
WORKDIR docopt.cpp/build
RUN cmake -DCPACK_GENERATOR="DEB" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/work/cmake-modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build stringhex
# NOTE version 0.2.1 has not the mingw toolchain in the cmake/modules git submodule
# so we use the one from the cmake-modules repo directly
WORKDIR /work
RUN git clone -b 0.2.1 https://github.com/stackforce/stringhex.git
WORKDIR stringhex/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/work/cmake-modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build crc
# NOTE version 0.1.3 has not the mingw toolchain in the cmake/modules git submodule
# so we use the one from the cmake-modules repo directly
WORKDIR /work
RUN git clone -b 0.1.3 https://github.com/stackforce/crc.git
WORKDIR crc/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/work/cmake-modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build serial mac
WORKDIR /work
RUN git clone -b 3.0.0 https://github.com/stackforce/serial-interface-mac.git
WORKDIR serial-interface-mac
RUN git submodule update --init
WORKDIR build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build observer
WORKDIR /work
RUN git clone -b 3.0.0 https://github.com/stackforce/observer.git
WORKDIR observer
RUN git submodule update --init
WORKDIR build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build serial observer
WORKDIR /work
RUN git clone -b 2.0.0 https://github.com/stackforce/serial-interface-observer.git
WORKDIR serial-interface-observer
RUN git submodule update --init
WORKDIR build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/modules/toolchain-cross-mingw-x86_64.cmake .. && make

# build serial cli
COPY . /work/serial-interface-cli
WORKDIR /work/serial-interface-cli/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/modules/toolchain-cross-mingw-x86_64.cmake .. && make package
